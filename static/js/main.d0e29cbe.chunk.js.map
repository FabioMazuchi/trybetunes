{"version":3,"sources":["components/Header.js","services/favoriteSongsAPI.js","components/MusicCard.js","services/musicsAPI.js","components/Footer.js","components/Loading.js","pages/Album.js","pages/Favorites.js","services/userAPI.js","pages/Login.js","pages/NotFound.js","pages/Profile.js","pages/ProfileEdit.js","services/searchAlbumsAPI.js","pages/Search.js","App.js","index.js"],"names":["Header","to","Component","FAVORITE_SONGS_KEY","JSON","parse","localStorage","getItem","setItem","stringify","readFavoriteSongs","saveFavoriteSongs","favoriteSongs","simulateRequest","response","callback","setTimeout","getFavoriteSongs","Promise","resolve","addSong","song","removeSong","filter","s","trackId","MusicCard","state","favoritCheck","loading","handleChange","bind","addSongFavorite","removeSongFavorite","setObjOnSetState","this","requestSongs","target","name","checked","setState","songs","props","testId","Number","getAttribute","split","objFavoriteSong","find","a","forEach","resp","obj","previewUrl","trackName","className","src","controls","kind","htmlFor","id","onChange","type","getMusics","fetch","request","json","requestJson","results","Footer","Date","getFullYear","Loading","Album","artisName","albumName","callApi","match","params","artistName","collectionName","imgAlbum","artworkUrl100","alt","undefined","map","i","track","Favorites","favSongs","getFav","prevProps","prevState","length","USER_KEY","saveUser","user","getUser","createUser","email","image","description","Login","nome","isDisabled","logado","validateinputs","changeRoute","handleLogin","value","e","preventDefault","history","push","onClick","disabled","NotFound","Profile","ProfileEdit","searchAlbumsAPI","artist","artistNameURL","encodeURI","replaceAll","getAlbumsAPI","APIResponse","artistId","collectionId","collectionPrice","releaseDate","trackCount","INITIAL_STATE","userName","loadingPesquisa","responseApi","artisNameShow","albuns","Search","handleRequest","searchAlbumsAPIs","renderUser","placeholder","albun","App","exact","path","component","render","propsRoute","React","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d0e29cbe.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nclass Header extends Component {\n  render() {\n    return (\n      <header data-testid=\"header-component\">\n        <nav>\n          <ul>\n            <Link data-testid=\"link-to-search\" to=\"/search\">\n              Procurar\n            </Link>\n            <Link data-testid=\"link-to-favorites\" to=\"/favorites\">\n              Favoritas\n            </Link>\n          </ul>\n        </nav>\n      </header>\n    );\n  }\n}\n\nexport default Header;\n","const FAVORITE_SONGS_KEY = 'favorite_songs';\nconst TIMEOUT = 500;\nconst SUCCESS_STATUS = 'OK';\n\nif (!JSON.parse(localStorage.getItem(FAVORITE_SONGS_KEY))) {\n  localStorage.setItem(FAVORITE_SONGS_KEY, JSON.stringify([]));\n}\nconst readFavoriteSongs = () => JSON.parse(localStorage.getItem(FAVORITE_SONGS_KEY));\n\nconst saveFavoriteSongs = (favoriteSongs) => localStorage\n  .setItem(FAVORITE_SONGS_KEY, JSON.stringify(favoriteSongs));\n\n// --------------------------------------------------------------------\n// A função simulateRequest simula uma requisição para uma API externa\n// Esse tipo de função que \"chama outra função\" é chamada de\n// \"currying function\" https://javascript.info/currying-partials\n// não se preocupe, estudaremos isso futuramente.\n// --------------------------------------------------------------------\n\nconst simulateRequest = (response) => (callback) => {\n  setTimeout(() => {\n    callback(response);\n  }, TIMEOUT);\n};\n\nexport const getFavoriteSongs = () => new Promise((resolve) => {\n  const favoriteSongs = readFavoriteSongs();\n  simulateRequest(favoriteSongs)(resolve);\n});\n\nexport const addSong = (song) => new Promise((resolve) => {\n  if (song) {\n    const favoriteSongs = readFavoriteSongs();\n    saveFavoriteSongs([...favoriteSongs, song]);\n  }\n  simulateRequest(SUCCESS_STATUS)(resolve);\n});\n\nexport const removeSong = (song) => new Promise((resolve) => {\n  const favoriteSongs = readFavoriteSongs();\n  saveFavoriteSongs(favoriteSongs.filter((s) => s.trackId !== song.trackId));\n  simulateRequest(SUCCESS_STATUS)(resolve);\n});\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  addSong,\n  getFavoriteSongs,\n  removeSong,\n} from '../services/favoriteSongsAPI';\n\nclass MusicCard extends Component {\n  constructor() {\n    super();\n    this.state = {\n      favoritCheck: false,\n      // eslint-disable-next-line react/no-unused-state\n      loading: false,\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.addSongFavorite = this.addSongFavorite.bind(this);\n    this.removeSongFavorite = this.removeSongFavorite.bind(this);\n    this.setObjOnSetState = this.setObjOnSetState.bind(this);\n  }\n\n  componentDidMount() {\n    this.requestSongs();\n  }\n\n  handleChange({ target }) {\n    const { name, checked } = target;\n    this.setState(\n      {\n        [name]: checked,\n      },\n      () => this.setObjOnSetState(target),\n    );\n  }\n\n  setObjOnSetState(target) {\n    const { songs } = this.props;\n    const testId = Number(target.getAttribute('data-testid').split('-')[2]);\n    const objFavoriteSong = songs.find((song) => song.trackId === testId);\n    if (target.checked) {\n      this.addSongFavorite(objFavoriteSong);\n    } else {\n      this.removeSongFavorite(objFavoriteSong);\n    }\n  }\n\n  async requestSongs() {\n    const { trackId } = this.props;\n    const response = await getFavoriteSongs();\n\n    response.forEach((resp) => {\n      if (resp.trackId === trackId) {\n        this.setState({ favoritCheck: true });\n      }\n    });\n  }\n\n  async removeSongFavorite(obj) {\n    // eslint-disable-next-line react/no-unused-state\n    this.setState({ loading: true });\n    await removeSong(obj);\n    // eslint-disable-next-line react/no-unused-state\n    this.setState({ loading: false });\n  }\n\n  async addSongFavorite(obj) {\n    // eslint-disable-next-line react/no-unused-state\n    this.setState({ loading: true });\n    await addSong(obj);\n    // eslint-disable-next-line react/no-unused-state\n    this.setState({ loading: false });\n  }\n\n  render() {\n    const { previewUrl, trackId, trackName } = this.props;\n    const { favoritCheck } = this.state;\n    return (\n      <div>\n        <div className=\"songsSingle\">\n          <p>{trackName}</p>\n          <div>\n            <audio data-testid=\"audio-component\" src={ previewUrl } controls>\n              <track kind=\"captions\" />\n              <code>audio</code>\n            </audio>\n            <label htmlFor={ trackId }>\n              <input\n                id={ trackId }\n                checked={ favoritCheck }\n                name=\"favoritCheck\"\n                onChange={ this.handleChange }\n                type=\"checkbox\"\n                data-testid={ `checkbox-music-${trackId}` }\n              />\n              {favoritCheck ? (\n                <i className=\"fas fa-heart\" />\n              ) : (\n                <i className=\"far fa-heart\" />\n              )}\n            </label>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nMusicCard.propTypes = {\n  trackName: PropTypes.string.isRequired,\n  previewUrl: PropTypes.string.isRequired,\n  trackId: PropTypes.number.isRequired,\n  songs: PropTypes.arrayOf(\n    PropTypes.shape({\n      amgArtistId: PropTypes.number.isRequired,\n      artistId: PropTypes.number.isRequired,\n      artistName: PropTypes.string.isRequired,\n      artistViewUrl: PropTypes.string.isRequired,\n      artworkUrl100: PropTypes.string.isRequired,\n      artworkUrl60: PropTypes.string.isRequired,\n      collectionCensoredName: PropTypes.string.isRequired,\n      collectionExplicitness: PropTypes.string.isRequired,\n      collectionId: PropTypes.number.isRequired,\n      collectionName: PropTypes.string.isRequired,\n      collectionPrice: PropTypes.number.isRequired,\n      collectionType: PropTypes.string.isRequired,\n      collectionViewUrl: PropTypes.string.isRequired,\n      currency: PropTypes.string.isRequired,\n      primaryGenreName: PropTypes.string.isRequired,\n      releaseDate: PropTypes.string.isRequired,\n      trackCount: PropTypes.number.isRequired,\n      wrapperType: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n};\n\nexport default MusicCard;\n","const getMusics = async (id) => {\n  const request = await fetch(`https://itunes.apple.com/lookup?id=${id}&entity=song`);\n  const requestJson = await request.json();\n  return requestJson.results;\n};\n\nexport default getMusics;\n","import React, { Component } from 'react';\n\nclass Footer extends Component {\n  render() {\n    return (\n      <footer>\n        <p>{`Fábio Mazuchi | ${new Date().getFullYear()}`}</p>\n      </footer>\n    );\n  }\n}\n\nexport default Footer;\n","import React, { Component } from 'react';\n\nclass Loading extends Component {\n  render() {\n    return <div className=\"loading\">Carregando...</div>;\n  }\n}\n\nexport default Loading;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Header from '../components/Header';\nimport MusicCard from '../components/MusicCard';\nimport getMusics from '../services/musicsAPI';\nimport Footer from '../components/Footer';\nimport Loading from '../components/Loading';\n\nclass Album extends Component {\n  constructor() {\n    super();\n    this.state = {\n      songs: [],\n      artisName: '',\n      albumName: '',\n      loading: false,\n    };\n    this.callApi = this.callApi.bind(this);\n  }\n\n  componentDidMount() {\n    this.callApi();\n  }\n\n  async callApi() {\n    this.setState({ loading: true });\n    const {\n      match: {\n        params: { id },\n      },\n    } = this.props;\n    const response = await getMusics(id);\n    this.setState({\n      songs: response,\n      artisName: response[0].artistName,\n      albumName: response[0].collectionName,\n      imgAlbum: response[0].artworkUrl100,\n    });\n    this.setState({ loading: false });\n  }\n\n  render() {\n    const { songs, artisName, albumName, imgAlbum, loading } = this.state;\n    return (\n      <div>\n        <Header />\n        {loading ? (\n          <Loading />\n        ) : (\n          <div data-testid=\"page-album\" className=\"albumTracks\">\n            <section className=\"tituloImagem\">\n              <img src={ imgAlbum } alt=\"imagem\" />\n              <div>\n                <h3 data-testid=\"artist-name\">{ artisName }</h3>\n                <h4 data-testid=\"album-name\">{ albumName }</h4>\n              </div>\n            </section>\n            <section className=\"containerSongs\">\n              {songs\n                .filter((song) => song.kind !== undefined)\n                .map((song, i) => (\n                  <MusicCard\n                    track={ i + 1 }\n                    previewUrl={ song.previewUrl }\n                    trackId={ song.trackId }\n                    key={ song.trackId }\n                    trackName={ song.trackName }\n                    songs={ songs }\n                  />\n                ))}\n            </section>\n          </div>\n        )}\n        <Footer />\n      </div>\n    );\n  }\n}\n\nAlbum.propTypes = {\n  id: PropTypes.string.isRequired,\n  match: PropTypes.shape({\n    isExact: PropTypes.bool.isRequired,\n    params: PropTypes.shape({\n      id: PropTypes.string.isRequired,\n    }).isRequired,\n    path: PropTypes.string.isRequired,\n    url: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nexport default Album;\n","import React, { Component } from 'react';\nimport Header from '../components/Header';\nimport Loading from '../components/Loading';\nimport Footer from '../components/Footer';\nimport { getFavoriteSongs, removeSong } from '../services/favoriteSongsAPI';\n\nclass Favorites extends Component {\n  constructor() {\n    super();\n    this.state = {\n      favoritCheck: true,\n      favSongs: [],\n      loading: false,\n    };\n    this.removeSongFavorite = this.removeSongFavorite.bind(this);\n    this.getFav = this.getFav.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.setObjOnSetState = this.setObjOnSetState.bind(this);\n  }\n\n  componentDidMount() {\n    this.getFav();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (!prevState.favoritCheck) {\n      this.getFav();\n    }\n  }\n\n  handleChange({ target }) {\n    const { name, checked } = target;\n    this.setState(\n      {\n        [name]: checked,\n      },\n      this.setObjOnSetState(target),\n    );\n  }\n\n  async getFav() {\n    this.setState({ loading: true });\n    this.setState(\n      {\n        favSongs: await getFavoriteSongs(),\n      },\n      () => this.setState({ loading: false }),\n    );\n  }\n\n  setObjOnSetState(target) {\n    const { favSongs } = this.state;\n    const testId = Number(target.getAttribute('data-testid').split('-')[2]);\n    const objFavoriteSong = favSongs.find((song) => song.trackId === testId);\n    this.removeSongFavorite(objFavoriteSong);\n  }\n\n  async removeSongFavorite(obj) {\n    this.setState({ loading: true });\n    await removeSong(obj);\n    this.setState({ loading: false, favoritCheck: true });\n  }\n\n  render() {\n    const { favSongs, favoritCheck, loading, trackId } = this.state;\n    return (\n      <div data-testid=\"page-favorites\">\n        <Header />\n        { favSongs.length === 0 && '' }\n        { loading ? (\n          <Loading />\n        ) : (\n          <div className=\"favorites\">\n            <h1>Músicas Favoritas</h1>\n            {favSongs.map((song) => (\n              <div className=\"songsSingle\" key={ song.trackId }>\n                <p>{song.trackName}</p>\n                <img src={ song.artworkUrl100 } alt={ song.trackName } />\n                <div>\n                  <audio\n                    data-testid=\"audio-component\"\n                    src={ song.previewUrl }\n                    controls\n                  >\n                    <track kind=\"captions\" />\n                    <code>audio</code>\n                  </audio>\n                  <label htmlFor={ trackId }>\n                    <input\n                      id={ trackId }\n                      checked={ favoritCheck }\n                      name=\"favoritCheck\"\n                      onChange={ this.handleChange }\n                      type=\"checkbox\"\n                      data-testid={ `checkbox-music-${song.trackId}` }\n                    />\n                    {favoritCheck ? (\n                      <i className=\"fas fa-heart\" />\n                    ) : (\n                      <i className=\"far fa-heart\" />\n                    )}\n                  </label>\n                </div>\n              </div>\n            ))}\n          </div>\n        )}\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default Favorites;\n","const USER_KEY = 'user';\nconst TIMEOUT = 1500;\nconst SUCCESS_STATUS = 'OK';\n\nconst readUser = () => JSON.parse(localStorage.getItem(USER_KEY));\nconst saveUser = (user) => localStorage.setItem(USER_KEY, JSON.stringify(user));\n\n// --------------------------------------------------------------------\n// A função simulateRequest simula uma requisição para uma API externa\n// Esse tipo de função que \"chama outra função\" é chamada de\n// \"currying function\" https://javascript.info/currying-partials\n// não se preocupe, estudaremos isso mais futuramente\n// --------------------------------------------------------------------\n\nconst simulateRequest = (response) => (callback) => {\n  setTimeout(() => {\n    callback(response);\n  }, TIMEOUT);\n};\n\nexport const getUser = () => new Promise((resolve) => {\n  let user = readUser();\n  if (user === null) {\n    user = {};\n  }\n  simulateRequest(user)(resolve);\n});\n\nexport const createUser = (user) => new Promise((resolve) => {\n  const emptyUser = {\n    name: '',\n    email: '',\n    image: '',\n    description: '',\n  };\n  saveUser({ ...emptyUser, ...user });\n  simulateRequest(SUCCESS_STATUS)(resolve);\n});\n\nexport const updateUser = (updatedUser) => new Promise((resolve) => {\n  saveUser({ ...updatedUser });\n  simulateRequest(SUCCESS_STATUS)(resolve);\n});\n","import propTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { GiMusicSpell } from 'react-icons/gi';\nimport { createUser } from '../services/userAPI';\nimport Loading from '../components/Loading';\n\nconst MIN_NOME = 3;\n\nclass Login extends Component {\n  constructor() {\n    super();\n    this.state = {\n      nome: '',\n      isDisabled: true,\n      logado: false,\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.validateinputs = this.validateinputs.bind(this);\n    this.changeRoute = this.changeRoute.bind(this);\n    this.handleLogin = this.handleLogin.bind(this);\n  }\n\n  handleChange({ target }) {\n    const { name, value } = target;\n    this.setState(\n      {\n        [name]: value,\n      },\n      () => this.validateinputs(),\n    );\n  }\n\n  async handleLogin(e) {\n    e.preventDefault();\n    const { nome } = this.state;\n    this.setState({ logado: true });\n    await createUser({ name: nome });\n    this.changeRoute(e);\n  }\n\n  validateinputs() {\n    const { nome } = this.state;\n\n    if (nome.length >= MIN_NOME) {\n      this.setState({ isDisabled: false });\n    } else {\n      this.setState({ isDisabled: true });\n    }\n  }\n\n  changeRoute(e) {\n    e.preventDefault();\n    const { history } = this.props;\n    history.push('/search');\n  }\n\n  render() {\n    const { nome, isDisabled, logado } = this.state;\n    return (\n      <div className=\"login\" data-testid=\"page-login\">\n        {logado ? (\n          <Loading />\n        ) : (\n          <>\n            <div className=\"div-login\">\n              <h1>\n                Trybetunes\n                <span><GiMusicSpell /></span>\n              </h1>\n              <ul>\n                <li>Liste os álbuns de um artista, banda, dupla etc.</li>\n                <li>Ouça por 30 segundos as faixas de um álbum.</li>\n                <li>Confira os nomes das músicas em um álbum.</li>\n              </ul>\n            </div>\n            <form className=\"login\">\n              <label htmlFor=\"nome\">\n                Qual é o seu nome?\n                <input\n                  data-testid=\"login-name-input\"\n                  type=\"text\"\n                  name=\"nome\"\n                  value={ nome }\n                  onChange={ this.handleChange }\n                  id=\"nome\"\n                />\n              </label>\n              <button\n                data-testid=\"login-submit-button\"\n                onClick={ this.handleLogin }\n                type=\"submit\"\n                disabled={ isDisabled }\n              >\n                Entrar\n              </button>\n            </form>\n          </>\n        )}\n      </div>\n    );\n  }\n}\n\nLogin.propTypes = {\n  history: propTypes.shape({\n    push: propTypes.func.isRequired,\n  }).isRequired,\n};\n\nexport default Login;\n","import React, { Component } from 'react';\n\nclass NotFound extends Component {\n  render() {\n    return (\n      <div data-testid=\"page-not-found\">\n        <h1>404 Página não encontrada</h1>\n      </div>\n    );\n  }\n}\n\nexport default NotFound;\n","import React, { Component } from 'react';\nimport Header from '../components/Header';\n\nclass Profile extends Component {\n  render() {\n    return (\n      <div data-testid=\"page-profile\">\n        <Header />\n        <h1>Profile</h1>\n      </div>\n    );\n  }\n}\n\nexport default Profile;\n","import React, { Component } from 'react';\nimport Header from '../components/Header';\n\nclass ProfileEdit extends Component {\n  render() {\n    return (\n      <div data-testid=\"page-profile-edit\">\n        <Header />\n        <h1>Profile Edit</h1>\n      </div>\n    );\n  }\n}\n\nexport default ProfileEdit;\n","const searchAlbumsAPI = async (artist) => {\n  const artistNameURL = encodeURI(artist).replaceAll('%20', '+');\n\n  const getAlbumsAPI = `https://itunes.apple.com/search?entity=album&term=${artistNameURL}&attribute=allArtistTerm`;\n\n  const APIResponse = await fetch(getAlbumsAPI);\n\n  const { results } = await APIResponse.json();\n\n  const response = results.map(\n    ({\n      artistId,\n      artistName,\n      collectionId,\n      collectionName,\n      collectionPrice,\n      artworkUrl100,\n      releaseDate,\n      trackCount,\n    }) => ({\n      artistId,\n      artistName,\n      collectionId,\n      collectionName,\n      collectionPrice,\n      artworkUrl100,\n      releaseDate,\n      trackCount,\n    }),\n  );\n  return response;\n};\n\nexport default searchAlbumsAPI;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport Header from '../components/Header';\nimport { getUser } from '../services/userAPI';\nimport Loading from '../components/Loading';\nimport searchAlbumsAPIs from '../services/searchAlbumsAPI';\nimport Footer from '../components/Footer';\n\nconst MIN_NOME = 2;\nconst INITIAL_STATE = {\n  userName: '',\n  loading: true,\n  artistName: '',\n  isDisabled: true,\n  loadingPesquisa: false,\n  responseApi: false,\n  artisNameShow: '',\n  albuns: [],\n};\n\nclass Search extends Component {\n  constructor() {\n    super();\n    this.state = INITIAL_STATE;\n  }\n\n  componentDidMount() {\n    this.renderUser();\n  }\n\n  handleChange = ({ target }) => {\n    const { name, value } = target;\n    this.setState({ [name]: value },\n      () => this.validateinputs());\n  }\n\n  handleRequest = async () => {\n    const { artistName } = this.state;\n    this.setState({\n      artistName: '',\n      loadingPesquisa: true,\n      responseApi: false,\n      artisNameShow: artistName,\n    });\n    const response = await searchAlbumsAPIs(artistName);\n    this.setState({\n      loadingPesquisa: false,\n      responseApi: true,\n      albuns: response,\n    });\n  }\n\n  validateinputs = () => {\n    const { artistName } = this.state;\n\n    if (artistName.length >= MIN_NOME) {\n      this.setState({ isDisabled: false });\n    } else {\n      this.setState({ isDisabled: true });\n    }\n  }\n\n  async renderUser() {\n    const obj = await getUser();\n    const nome = obj.name;\n    this.setState({\n      userName: nome,\n      loading: false,\n    });\n  }\n\n  render() {\n    const {\n      userName,\n      loading,\n      artistName,\n      isDisabled,\n      loadingPesquisa,\n      responseApi,\n      artisNameShow,\n      albuns,\n    } = this.state;\n    return (\n      <div className=\"search\" data-testid=\"page-search\">\n        <Header />\n        {loading ? (\n          <Loading />\n        ) : (\n          <h2 data-testid=\"header-user-name\">\n            { `Bem vindo(a) ${userName}` }\n          </h2>\n        )}\n        {loadingPesquisa ? (\n          <Loading />\n        ) : (\n          <form className=\"search\">\n            <input\n              name=\"artistName\"\n              data-testid=\"search-artist-input\"\n              type=\"text\"\n              placeholder=\"Digite aqui sua pesquisa\"\n              onChange={ this.handleChange }\n              value={ artistName }\n            />\n            <button\n              disabled={ isDisabled }\n              data-testid=\"search-artist-button\"\n              type=\"reset\"\n              onClick={ this.handleRequest }\n            >\n              Pesquisar\n            </button>\n          </form>\n        )}\n        {responseApi && (\n          <section className=\"container\">\n            {albuns.length === 0 ? (\n              <div className=\"nenhumAlbum\">\n                <span>Nenhum álbum foi encontrado</span>\n              </div>\n            ) : (\n              <section>\n                <h3>{`Resultado de álbuns de ${artisNameShow}`}</h3>\n                <div>\n                  <div className=\"albuns\">\n                    {albuns.map((albun) => (\n                      <Link\n                        data-testid={ `link-to-album-${albun.collectionId}` }\n                        to={ `/album/${albun.collectionId}` }\n                        key={ albun.id }\n                      >\n                        <img\n                          src={ albun.artworkUrl100 }\n                          alt={ albun.collectionName }\n                        />\n                        <div>\n                          <h4>{`${albun.artistName}`}</h4>\n                          <p>{albun.collectionName}</p>\n                        </div>\n                      </Link>\n                    ))}\n                  </div>\n                </div>\n              </section>\n            )}\n          </section>\n        )}\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default Search;\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport { BrowserRouter } from 'react-router-dom/cjs/react-router-dom.min';\nimport Album from './pages/Album';\nimport Favorites from './pages/Favorites';\nimport Login from './pages/Login';\nimport NotFound from './pages/NotFound';\nimport Profile from './pages/Profile';\nimport ProfileEdit from './pages/ProfileEdit';\nimport Search from './pages/Search';\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div>\n        <BrowserRouter>\n          <Switch>\n            <Route exact path=\"/trybetunes\" component={ Login } />\n            <Route exact path=\"/search\" component={ Search } />\n            <Route\n              path=\"/album/:id\"\n              render={ (propsRoute) => <Album { ...propsRoute } /> }\n            />\n            <Route exact path=\"/favorites\" component={ Favorites } />\n            <Route exact path=\"/profile/edit\" component={ ProfileEdit } />\n            <Route exact path=\"/profile\" component={ Profile } />\n            <Route exact path=\"*\" component={ NotFound } />\n          </Switch>\n        </BrowserRouter>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}